{-
Problem 2

Each new term in the Fibonacci sequence is generated by adding the previous two
terms. By starting with 1 and 2, the first 10 terms will be:

  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.
-}

module Main where

fib :: Int -> [Int] -> [Int]
fib n (f2:f1:fs) | f2+f1 >= n = f2:f1:fs
                 | otherwise  = fib n ((f2+f1):f2:f1:fs)
fib _ _ = error "invalid args"

{- return fibonacci secuence under the value -}
fibonacci :: Int -> [Int]
fibonacci n = reverse (fib n [2, 1])

main :: IO ()
main = print (sum (filter even (fibonacci 4000000)))

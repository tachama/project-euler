;;;; -*- coding: utf-8 -*-
;;;;
;;;; Problem 2
;;;;
;;;;   Each new term in the Fibonacci sequence is generated by adding the previous
;;;;   two terms. By starting with 1 and 2, the first 10 terms will be:
;;;;     1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
;;;;   By considering the terms in the Fibonacci sequence whose values do not
;;;;   exceed four million, find the sum of the even-valued terms.

(defconstant +in-number+ 4000000)

;;
;; フィボナッチ数列の生成 (基本バージョン)
;;
(defun fibonacci-under (n)
  "nを超えない範囲でフィボナッチ数列を生成する"
  (reverse (fibonacci-under-sub '(2 1) n)))
(defun fibonacci-under-sub (lst n)
  "fibonacci-underのサブ関数"
  (let ((next (+ (first lst) (second lst))))
    (if (> next n)
	lst
	(fibonacci-under-sub (cons next lst) n))))

;; メイン処理
(defun main (n)
  "メイン関数"
  (let* ((fib (fibonacci-under n))
	 (nums (remove-if-not #'evenp fib)))
    (format t "~d~%" (apply #'+ nums))))

(main +in-number+)

